/*
 * Copyright (C) 2018. OpenLattice, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * You can contact the owner of the copyright at support@openlattice.com
 *
 */

plugins {
    id "java"
    id 'maven-publish'
    id 'signing'
    id "eclipse"
    id "idea"
    id "jacoco"
    id 'com.github.spotbugs' version '1.6.6'
    id 'org.jetbrains.kotlin.jvm' version '1.3.10'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.10'
}

description = "Scribe renders is templated render system for e-mails"
group = "com.openlattice"

ext.projectName = 'scribe'
ext.scmUrl = 'scm:git:https://github.com/openlattice/scribe.git'
ext.connectionUrl = 'scm:git:https://github.com/openlattice/scribe.git'
ext.developerConnectionUrl = 'scm:git:https://github.com/openlattice/scribe.git'

apply from: "https://raw.githubusercontent.com/openlattice/gradles/master/openlattice.gradle"
apply plugin: 'kotlin'

sourceCompatibility=JavaVersion.VERSION_11
ext.targetCompatibility = JavaVersion.VERSION_11

spotbugs {
    toolVersion = '3.1.9'
}

jacoco {
    toolVersion = "${project.jacoco_tool_version}"
}


tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}


dependencies {
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
    compileOnly 'net.jcip:jcip-annotations:1.0'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.3'
    testCompileOnly 'net.jcip:jcip-annotations:1.0'
    testCompileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.3'

    compile 'com.esotericsoftware:kryo-shaded:4.0.0'
    compile 'com.esotericsoftware:minlog:1.3.0'
    compile 'com.esotericsoftware:reflectasm:1.11.3'
    compile 'org.objenesis:objenesis:2.4'

    if( project.hasProperty('developmentMode') && project.developmentMode ) {
        logger.quiet(project.name + " using project dependencies.")
        compile project(":rhizome")
        testCompile( project(path: ":rhizome", configuration: "tests"))
        testCompile( project(path: ":rhizome-client", configuration: "tests"))
    } else {
        logger.quiet(project.name + " using jar dependencies.")
        compile "com.openlattice:rhizome:${rhizome_version}"
        testCompile "com.openlattice:rhizome:${rhizome_version}:tests"
        testCompile "com.openlattice:rhizome-client:${rhizome_client_version}:tests"
    }

    /*
     * TESTING
     */
    testCompile "junit:junit:${junit_version}"
    testCompile( "org.mockito:mockito-all:${mockito_version}" ) {
        exclude module : 'hamcrest'
        exclude module : 'hamcrest-core'
    }
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

install {
	configuration = configurations.published
}

eclipse {
    ext.downloadSources = true
    ext.downloadJavadoc = true
    ext.sourceCompatibility=JavaVersion.VERSION_1_8
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
