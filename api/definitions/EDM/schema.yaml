schemaFqn:
  get:
    summary: Gets the schema contents for a corresponding namespace and name.
    operationId: getSchemaContents
    tags:
      - edm
    parameters:
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
    security:
      - openlattice_auth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "./definitions/EDM/components.yaml#/schema"
  put:
    summary: Creates an empty schema, if it doesn't exist. If schema exists then no action is taken.
    operationId: createEmptySchema
    tags:
      - edm
    parameters:
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
    security:
      - openlattice_auth: []
    responses:
      "200":
        description: Success
  patch:
    summary: Edits the schema contents for a corresponding namespace and name.
    operationId: updateSchema
    tags:
      - edm
    parameters:
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "./definitions/EDM/components.yaml#/EdmRequest"
    security:
      - openlattice_auth: []
    responses:
      "200":
        description: Success
schema:
  get:
    summary: Gets all schemas.
    operationId: getSchemas
    tags:
      - edm
    security:
      - openlattice_auth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "./definitions/EDM/components.yaml#/schema"
  post:
    summary: Creates an empty schema, if it doesn't exist. If schema exists then no action is taken.
    operationId: createSchemaIfNotExists
    tags:
      - edm
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "./definitions/EDM/components.yaml#/schema"
    security:
      - openlattice_auth: []
    responses:
      "200":
        description: Success
schemaNamespace:
  get:
    summary: Gets all schemas associated with a given namespace and accessible by the caller.
    operationId: getSchemasInNamespace
    tags:
      - edm
    security:
      - openlattice_auth: []
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "./definitions/EDM/components.yaml#/schema"
